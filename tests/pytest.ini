[tool:pytest]
# Configuration pytest pour les tests du projet SaferTrail

# Répertoires de tests
testpaths = tests

# Patterns de fichiers de tests
python_files = test_*.py *_test.py

# Patterns de classes de tests
python_classes = Test*

# Patterns de fonctions de tests
python_functions = test_*

# Marqueurs personnalisés
markers =
    unit: Tests unitaires rapides
    integration: Tests d'intégration (plus lents)
    slow: Tests lents (> 5 secondes)
    api: Tests de l'API Flask
    routing: Tests du système de routage
    temporal: Tests du modèle temporel
    geospatial: Tests des fonctionnalités géospatiales
    data: Tests de chargement et traitement des données
    model: Tests des modèles de machine learning
    performance: Tests de performance
    network: Tests nécessitant une connexion réseau

# Options par défaut
addopts = 
    --verbose
    --strict-markers
    --strict-config
    --tb=short
    --color=yes
    --durations=10
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --maxfail=5
    -ra

# Filtres de warnings
filterwarnings =
    # Ignorer les warnings de dépréciation de pandas/geopandas
    ignore::pandas.errors.PerformanceWarning
    ignore::FutureWarning:pandas.*
    ignore::DeprecationWarning:geopandas.*
    ignore::UserWarning:matplotlib.*
    ignore::DeprecationWarning:networkx.*
    
    # Ignorer les warnings de shapely
    ignore::shapely.errors.ShapelyDeprecationWarning
    
    # Ignorer les warnings de sklearn
    ignore::sklearn.exceptions.DataConversionWarning
    ignore::sklearn.exceptions.UndefinedMetricWarning
    
    # Traiter comme erreurs certains warnings critiques
    error::RuntimeWarning:src.*
    error::UserWarning:src.*

# Timeout pour les tests (en secondes)
timeout = 300

# Variables d'environnement pour les tests
env =
    TESTING = 1
    FLASK_ENV = testing
    PYTHONPATH = .

# Configuration de logging pour les tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Configuration des fixtures
usefixtures = 
    mock_datetime_now

# Ordre d'exécution des tests (plus rapides en premier)
testmon = true